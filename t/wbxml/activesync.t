use strict;
use warnings;

use Test::More tests => 9;

use Plync::WBXML::Parser;
use Plync::WBXML::Builder;

use Plync::WBXML::Schema::ActiveSync;

my $wbxml = pack('H*', '03016a00455c4f5003436f6e746163747300014b0332000152033200014e0331000156474d03323a3100015d00114a46033100014c033000014d033100010100015e0348616c6c2c20446f6e00015f03446f6e0001690348616c6c000100115603310001010101010101');

my $xml = <<'EOF';
<?xml version="1.0" encoding="utf-8"?>
<Sync xmlns="AirSync:" xmlns:airsyncbase="AirSyncBase:" xmlns:contacts="Contacts:">
    <Collections>
        <Collection>
            <Class>Contacts</Class>
            <SyncKey>2</SyncKey>
            <CollectionId>2</CollectionId>
            <Status>1</Status>
            <Commands>
                <Add>
                    <ServerId>2:1</ServerId>
                    <ApplicationData>
                        <airsyncbase:Body>
                            <airsyncbase:Type>1</airsyncbase:Type>
                            <airsyncbase:EstimatedDataSize>0</airsyncbase:EstimatedDataSize>
                            <airsyncbase:Truncated>1</airsyncbase:Truncated>
                        </airsyncbase:Body>
                        <contacts:FileAs>Hall, Don</contacts:FileAs>
                        <contacts:FirstName>Don</contacts:FirstName>
                        <contacts:LastName>Hall</contacts:LastName>
                        <airsyncbase:NativeBodyType>1</airsyncbase:NativeBodyType>
                    </ApplicationData>
                </Add>
            </Commands>
        </Collection>
    </Collections>
</Sync>
EOF

my $dom = test_roundtrip($wbxml, $xml);

my $xpc = XML::LibXML::XPathContext->new($dom->documentElement);
$xpc->registerNs('as', 'AirSync:');
$xpc->registerNs('asb', 'AirSyncBase:');
is($xpc->findvalue('//as:Collections/as:Collection/as:Class'), 'Contacts');
is($xpc->findvalue('//asb:Type[1]'), '1');

$wbxml = pack 'H*', '03016a00000d45480338300001494a4b033500014c03456d61696c0001010101';

$xml = <<'EOF';
<?xml version="1.0" encoding="utf-8"?>
<Ping xmlns="Ping:">
<HeartbeatInterval>80</HeartbeatInterval>
<Folders>
<Folder>
<Id>5</Id>
<Class>Email</Class>
</Folder>
</Folders>
</Ping>
EOF

$dom = test_roundtrip($wbxml, $xml);

$xpc = XML::LibXML::XPathContext->new($dom->documentElement);
$xpc->registerNs('ping', 'Ping:');
is($xpc->findvalue('//ping:HeartbeatInterval[1]'), 80);

sub test_roundtrip {
    my ($wbxml, $xml) = @_;

    my $builder =
      Plync::WBXML::Builder->new(
        schema => Plync::WBXML::Schema::ActiveSync->schema);

    $builder->build($xml);
    is($builder->to_wbxml, $wbxml);

    my $parser = Plync::WBXML::Parser->new(schema => Plync::WBXML::Schema::ActiveSync->schema);

    $xml =~ s/>\s+</></g;
    $xml =~ s/utf-8"\?>/UTF-8"?>\n/;
    ok($parser->parse($wbxml));
    is($parser->to_string, $xml);

    return $parser->dom;
}

$wbxml
=
pack
'H*', '03016a00455c4f5003456d61696c00014b037b64336437333161302d633335332d346336632d386434342d3261663131633164303439307d3200015203726f6f7400014e03310001464a4d0331323334356d61692e666f6f00014e033100015d0002560322566961636865736c61762054796b68616e6f76736b796922203c565449406370616e2e6f72673e000158034350414e20546573746572205265706f727420536572766572203c646f5f6e6f745f7265706c79406370616e746573746572732e6f72673e000154034350414e2054657374657273204461696c792053756d6d617279205265706f727400014f03323031312d30362d30355430333a31333a32382e3030305a0001510322566961636865736c61762054796b68616e6f76736b796922203c565449406370616e2e6f72673e000155033000014e033000014d033135353300014c034465617220566961636865736c61762054796b68616e6f76736b79692c0d0a0d0a506c656173652066696e642062656c6f7720746865206c6174657374207265706f72747320666f7220796f757220646973747269627574696f6e732c2067656e657261746564206279204350414e20546573746572732c2066726f6d20746865206c61737420323420686f7572732e200d0a0d0a546f2073657420796f757220707265666572656e63657320666f72207768617420796f75207769736820746f2068617665207265706f7274656420696e2074686973204461696c792053756d6d6172792c20706c6561736520766973697420746865204350414e205465737465727320507265666572656e6365732073797374656d2061742068747470733a2f2f70726566732e6370616e746573746572732e6f72672e0d0a0d0a0d0a4d6f6a6f582d53657373696f6e2d302e32333a0d0a2d20616d6436342d667265656273642d7468726561642d6d756c7469202f20352e31322e333a0d0a20202d204641494c20687474703a2f2f7777772e6370616e746573746572732e6f72672f6370616e2f7265706f72742f36373363643862652d386466612d313165302d393261352d6333343863396237656333300d0a0d0a2d207838365f36342d6c696e75782d7468726561642d6d756c7469202f20352e31322e333a0d0a20202d204641494c20687474703a2f2f7777772e6370616e746573746572732e6f72672f6370616e2f7265706f72742f32353463613933652d386530392d313165302d623238302d6338666332396465316334370d0a0d0a2d207838365f36342d6c696e75782d7468726561642d6d756c7469202f20352e31342e303a0d0a20202d204641494c20687474703a2f2f7777772e6370616e746573746572732e6f72672f6370616e2f7265706f72742f65336237643332362d386530392d313165302d623439662d6133303530333861616231350d0a0d0a0d0a0d0a496620796f75206861766520616e2069737375652077697468206120706172746963756c6172207265706f72742c206f72207769736820746f206761696e206675727468657220696e666f726d6174696f6e2066726f6d20746865207465737465722c20706c656173652075736520746865202746696e642041205465737465722720746f6f6c20617420687474703a2f2f73746174732e6370616e746573746572732e6f72672f6370616e6d61696c2e68746d6c2c207573696e6720746865204944206f722047554944206f6620746865207265706f72742c206173206c69737465642061626f76652c20746f206c6f636174652074686520636f727265637420656d61696c20616464726573732e0d0a0d0a496620796f75207769736820746f20756e7375627363726962652066726f6d207468657365206e6f74696669636174696f6e732c20706c65617365206c6f67696e20746f20746865204350414e205465737465727320507265666572656e6365732073797374656d2c207769746820796f75722050415553452063726564656e7469616c732c20616e642064697361626c65204350414e2054657374657273206e6f74696669636174696f6e73207065726d616e656e746c79206f722074656d706f726172696c792e20496620796f7520686176652070726f626c656d73207769746820616363657373696e672074686520736974652c20706c6561736520636f6e7461637420426172626965203c626172626965406370616e2e6f72673e20616e64207265717565737420746f2062652072656d6f7665642066726f6d20746865206175746f6d61746963206d61696c696e67732e200d0a0d0a5468616e6b732c0d0a546865204350414e20546573746572730d0a2d2d200d0a5265706f7274733a2020202020687474703a2f2f7777772e6370616e746573746572732e6f72670d0a537461746973746963733a2020687474703a2f2f73746174732e6370616e746573746572732e6f72670d0a57696b693a2020202020202020687474703a2f2f77696b692e6370616e746573746572732e6f72670d0a507265666572656e6365733a2068747470733a2f2f70726566732e6370616e746573746572732e6f72670d0a0d0a0001530349504d2e4e6f74650001010101010101';


my $parser = Plync::WBXML::Parser->new(schema => Plync::WBXML::Schema::ActiveSync->schema);

ok($parser->parse($wbxml));
warn $parser->dom->toString(2);
